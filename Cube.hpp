#pragma once

#include "Texture.hpp"

static const std::vector<Vertex> s_vertices = {
    {{-1.0f, 1.0f, 1.0}, {0.0f, 0.0f, 1.0f}, {0.0f, 1.0f}}, // front
    {{-1.0f, -1.0f, 1.0}, {0.0f, 0.0f, 1.0f}, {0.0f, 1.0f / 2}},
    {{1.0f, -1.0f, 1.0}, {0.0f, 0.0f, 1.0f}, {1.0f / 3, 1.0f / 2}},
    {{1.0f, 1.0f, 1.0}, {0.0f, 0.0f, 1.0f}, {1.0f / 3, 1.0f}},

    {{1.0f, 1.0f, 1.0}, {0.0f, 1.0f, 0.0f}, {2.0f / 3, 1.0f / 2}}, // top
    {{-1.0f, 1.0f, -1.0}, {0.0f, 1.0f, 0.0f}, {1.0f / 3, 1.0f}},
    {{-1.0f, 1.0f, 1.0}, {0.0f, 1.0f, 0.0f}, {1.0f / 3, 1.0f / 2}},
    {{1.0f, 1.0f, -1.0}, {0.0f, 1.0f, 0.0f}, {2.0f / 3, 1.0f}},

    {{1.0f, -1.0f, -1.0}, {1.0f, 0.0f, 0.0f}, {1.0f, 1.0f / 2}}, // right
    {{1.0f, 1.0f, 1.0}, {1.0f, 0.0f, 0.0f}, {2.0f / 3, 1.0f}},
    {{1.0f, -1.0f, 1.0}, {1.0f, 0.0f, 0.0f}, {2.0f / 3, 1.0f / 2}},
    {{1.0f, 1.0f, -1.0}, {1.0f, 0.0f, 0.0f}, {1.0f, 1.0f}},

    {{-1.0f, -1.0f, -1.0}, {-1.0f, 0.0f, 0.0f}, {0.0f, 0.0f}}, // left
    {{-1.0f, 1.0f, 1.0}, {-1.0f, 0.0f, 0.0f}, {1.0f / 3, 1.0f / 2}},
    {{-1.0f, 1.0f, -1.0}, {-1.0f, 0.0f, 0.0f}, {0.0f, 1.0f / 2}}, 
    {{-1.0f, -1.0f, 1.0f}, {-1.0f, 0.0f, 0.0f}, {1.0f / 3, 0.0f}},

    {{1.0f, -1.0f, 1.0}, {0.0f, -1.0f, 0.0f}, {1.0f / 3, 0.0f}}, // bottom
    {{-1.0f, -1.0f, -1.0}, {0.0f, -1.0f, 0.0f}, {2.0f / 3, 1.0f / 2}},
    {{1.0f, -1.0f, -1.0}, {0.0f, -1.0f, 0.0f}, {1.0f / 3, 1.0f / 2}},
    {{-1.0f, -1.0f, 1.0}, {0.0f, -1.0f, 0.0f}, {2.0f / 3, 0.0f}},

    {{1.0f, 1.0f, -1.0f}, {0.0f, 0.0f, -1.0f}, {2.0f / 3, 1.0f / 2}}, // back
    {{-1.0f, -1.0f, -1.0}, {0.0f, 0.0f, -1.0f}, {1.0f, 0.0f}},
    {{-1.0f, 1.0f, -1.0}, {0.0f, 0.0f, -1.0f}, {1.0f, 1.0f / 2}},
    {{1.0f, -1.0f, -1.0}, {0.0f, 0.0f, -1.0f}, {2.0f / 3, 0.0f}}
};

static const std::vector<unsigned int> s_indices = {
    0, 1, 2,
    3, 0, 2,

    4, 5, 6,
    4, 7, 5,

    8, 9, 10,
    9, 8, 11,
    
    12, 13, 14,
    12, 15, 13,

    16, 17, 18,
    16, 19, 17,

    20, 21, 22,
    20, 23, 21
};


struct Cube : public Mesh
{
    explicit Cube()
        : Mesh{s_vertices, s_indices, {TextureFromFile("dice.bmp")}}
    {
    }
};